version: '3.9'
services:
  main:
    build:
      context: ./docker
      dockerfile: Dockerfile.compose
    entrypoint: /compose-entrypoint.sh
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - HOST=${HOST}
      - PROTOCOL=${PROTOCOL} 
      - PORT=${PORT}
      - API_URL=${API_URL}
      - APP_ENV=${APP_ENV}
      - REDIS_HOST=${REDIS_HOST}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WEBHOOK_SECRET_KEY=${WEBHOOK_SECRET_KEY}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - r1connect_storage:/r1connect/storage
  worker:
    build:
      context: ./docker
      dockerfile: Dockerfile.compose
    entrypoint: /compose-entrypoint.sh
    depends_on:
      - main
    environment:
      - APP_ENV=${APP_ENV}
      - REDIS_HOST=${REDIS_HOST}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WEBHOOK_SECRET_KEY=${WEBHOOK_SECRET_KEY}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - WORKER=true
    volumes:
      - r1connect_storage:/r1connect/storage
  postgres:
    image: 'postgres:14.5'
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: 'redis:7.0.4'
    volumes:
      - redis_data:/data
volumes:
  r1connect_storage:
  postgres_data:
  redis_data:
